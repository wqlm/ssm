<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <!--web.xml的加载顺序是:
        <context-param> -> <listener> -> <filter> -> <servlet>
        如果web.xml中出现了相同的元素，则按照在配置文件中出现的先后顺序来加载
        -->

    <display-name>ssm Web Application</display-name>
    <description>this is a ssm project template, include SpringMVC MyBatis Freemarker druid swagger ehcache</description>




    <!--++++++++++++++++++++++++++++++++++++++++++++++配置Spring+++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!--context-param元素声明应用范围内的初始化参数，简单理解为一个全局可用的键值对-->
    <context-param>
        <!--配置Spring上下文环境，作用范围是整个web(注意这里说的是spring 不是springMVC)
        该context-param也可以省略不写，不写的话，spring的ContextLoaderListener监听器会去默认路径下找
        默认的路径是/WEB-INF/applicationContext.xml-->
        <param-name>contextConfigLocation</param-name>
        <!--classpath是指打包或运行后，WEB-INF文件夹下的classes目录和lib目录-->
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>
    <!--监听器-->
    <listener>
        <!--spring的ContextLoaderListener监听器的作用就是在Web容器启动时，自动装配spring的ApplicationContext配置文件的配置信息
            优先会在 <context-param> 标签中找，如果没找到，就去默认路径下找，默认的路径是/WEB-INF/applicationContext.xml
            该监听器必须要，不然无法加载Spring的配置-->
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!--++++++++++++++++++++++++++++++++++++++++++++++配置Spring+++++++++++++++++++++++++++++++++++++++++++++++++++++-->





    <listener>
        <!-- 防止Spring内存溢出的监听器 -->
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>




    <!--++++++++++++++++++++++++++++++++++++++++++++++处理字符编码++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!--过滤器-->
    <filter>
        <!--
        处理字符编码
        CharacterEncodingFilter 这个过滤器将对每次浏览器请求进行过滤，然后再其上处理字符编码。
        其中encoding用来设置编码格式，
        forceEncoding用来设置是否理会 request.getCharacterEncoding()方法，设置为true则强制覆盖之前的编码格式。
        -->
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--++++++++++++++++++++++++++++++++++++++++++++++处理字符编码++++++++++++++++++++++++++++++++++++++++++++++++++++-->



    <!--+++++++++++++++++++++++++++++++++++++++++会话超时配置,单位为分钟+++++++++++++++++++++++++++++++++++++++++++++++-->
    <session-config>
        <!--如果某个会话在一定时间未被访问，则服务器可以扔掉以节约内存-->
        <session-timeout>120</session-timeout>
    </session-config>
    <!--+++++++++++++++++++++++++++++++++++++++++会话超时配置,单位为分钟+++++++++++++++++++++++++++++++++++++++++++++++-->


    <!--+++++++++++++++++++++++++++++++++++++++++++++++处理静态资源+++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!--写在DispatcherServlet的前面， 让web容器的 defaultServlet先拦截请求，这样请求就不会进入Spring，性能好些-->
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.jpg</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.JPG</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.png</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.PNG</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.gif</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.GIF</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.js</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.css</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>
    <!--+++++++++++++++++++++++++++++++++++++++++++++++处理静态资源+++++++++++++++++++++++++++++++++++++++++++++++++++-->


    <!--++++++++++++++++++++++++++++++++++++++++++配置druid的数据监控界面++++++++++++++++++++++++++++++++++++++++++++++-->
    <servlet>
        <servlet-name>DruidStatView</servlet-name>
        <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
        <init-param>
            <!-- 允许清空统计数据 -->
            <param-name>resetEnable</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <!-- 用户名 -->
            <param-name>loginUsername</param-name>
            <param-value>druid</param-value>
        </init-param>
        <init-param>
            <!-- 密码 -->
            <param-name>loginPassword</param-name>
            <param-value>druid</param-value>
        </init-param>
        <!--
        <init-param>
            &lt;!&ndash; 访问IP白名单 &ndash;&gt;
            <param-name>allow</param-name>
            <param-value>192.168.1.253</param-value>
        </init-param>
        <init-param>
            &lt;!&ndash; 访问IP黑名单 &ndash;&gt;
            <param-name>deny</param-name>
            <param-value>192.168.1.252</param-value>
        </init-param>
        -->
    </servlet>
    <servlet-mapping>
        <servlet-name>DruidStatView</servlet-name>
        <url-pattern>/druid/*</url-pattern>
    </servlet-mapping>

    <filter>
        <filter-name>druidWebStatFilter</filter-name>
        <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
        <init-param>
            <param-name>exclusions</param-name>
            <param-value>*.js,*.gif,*.jpg,*.png,*.ico,*.css,*.ico,*.jsp,*.eot,*.woff,/druid/*,/download/*</param-value>
        </init-param>
        <init-param>
            <param-name>principalSessionName</param-name>
            <param-value>sessionInfo</param-value>
        </init-param>
        <init-param>
            <!-- 监控单个url调用的sql列表 -->
            <param-name>profileEnable</param-name>
            <param-value>true</param-value>
        </init-param>
        <!-- 可以关闭session统计功能 -->
        <!-- <init-param>
            <param-name>sessionStatEnable</param-name>
            <param-value>false</param-value>
        </init-param> -->
    </filter>

    <filter-mapping>
        <filter-name>druidWebStatFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--++++++++++++++++++++++++++++++++++++++++++配置druid的数据监控界面++++++++++++++++++++++++++++++++++++++++++++++-->



    <!--++++++++++++++++++++++++++++++++++++++++++++++配置SpringMVC++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!--从web.xml层面看，它就是一个普通的 servlet 接管所有请求,从SpringMVC的角度看，它是SpringMVC的入口-->
    <servlet>
        <!--SpringMVC部分的核心配置，配置SpringMVC的入口———DispatcherServlet-->
        <servlet-name>DispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <!--SpringMVC的配置文件,作用于该DispatcherServlet，是该DispatcherServlet的上下文环境。
            (注意这里说的是springMVC不是spring)-->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:dispatcher-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!--++++++++++++++++++++++++++++++++++++++++++++++配置SpringMVC++++++++++++++++++++++++++++++++++++++++++++++++++-->


</web-app>